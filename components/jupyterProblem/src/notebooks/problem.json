{
  "problemJSON": {
    "cells": [
      {
        "cell_type": "markdown",
        "metadata": { "colab_type": "text", "id": "9w5dA4ucVcbz" },
        "source": ["## Create the function sum() that accepts two parameters and returns the sum of them. "]
      },
      {
        "cell_type": "code",
        "execution_count": 1,
        "metadata": {
          "colab": { "autoexec": { "startup": false, "wait_interval": 0 } },
          "colab_type": "code",
          "id": "ASdL5tJ0VbU-"
        },
        "outputs": [],
        "source": ["#def sum\n"]
      },
      {
        "cell_type": "markdown",
        "metadata": { "colab_type": "text", "id": "bvAlsa6kxNtf" },
        "source": ["## Do not edit any code below this point. These are the tests to validate your function."]
      },
      {
        "cell_type": "code",
        "execution_count": 2,
        "metadata": {
          "colab": { "autoexec": { "startup": false, "wait_interval": 0 } },
          "colab_type": "code",
          "id": "e28OMnv5Vwov"
        },
        "outputs": [{ "name": "stdout", "output_type": "stream", "text": ["One of the tests failed.\n"] }],
        "source": [
          "try:\n",
          "  assert(sum(2,2) == 4)\n",
          "  assert(sum(2,1) == 3)\n",
          "except:\n",
          "  print(\"One of the tests failed.\")\n"
        ]
      }
    ],
    "metadata": {
      "colab": {
        "collapsed_sections": [],
        "default_view": {},
        "name": "Sum.ipynb",
        "provenance": [],
        "version": "0.3.2",
        "views": {}
      },
      "kernelspec": { "display_name": "Python 3", "name": "python3" }
    },
    "nbformat": 4,
    "nbformat_minor": 0
  }
}
